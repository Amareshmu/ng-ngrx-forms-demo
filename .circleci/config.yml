# Javascript Angular CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.11-browsers

    working_directory: ~/ng-ngrx-forms-demo

    steps:
      - checkout

      - restore_cache:
          keys:
          - angular-demo-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - angular-demo-dependencies-

      - run:
          name: install-dependencies
          command: yarn install

      - save_cache:
          key: angular-demo-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Build
          command: yarn build

      - persist_to_workspace:
          root: ~/ng-ngrx-forms-demo
          paths:
            - dist

      # - run:
      #     name: Code Quality
      #     command: yarn lint

      #- run:
      #    name: Test
      #    command: yarn test

  deploy:
    docker:
      - image: circleci/node:8.11-browsers

    working_directory: ~/ng-ngrx-forms-demo

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/ng-ngrx-forms-demo/dist

      - restore_cache:
          keys:
          - angular-demo-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - angular-demo-dependencies-

      - run:
          name: install-dependencies
          command: yarn install

      - save_cache:
          key: angular-demo-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Deploy App to Firebase
          command: ~/ng-ngrx-forms-demo/node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

workflows:
  version: 2
  build-deploy-app:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
              branches:
                only: master
