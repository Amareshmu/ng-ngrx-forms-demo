defaults: &defaults
  docker:
    - image: circleci/node:8.11-browsers

  working_directory: ~/ng-ngrx-forms-demo

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - angular-demo-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - angular-demo-dependencies-

      - run:
          name: install-dependencies
          command: yarn install

      - save_cache:
          key: angular-demo-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Build
          command: yarn build

      - persist_to_workspace:
          root: ~/ng-ngrx-forms-demo
          paths:
            - dist
            - firebase.json
            - .firebaserc
            - yarn.lock

      - run:
          name: Code Quality Check
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - run:
          name: Test App
          command: yarn test --code-coverage

      - store_artifacts:
          path: /coverage

  deploy-firebase:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/ng-ngrx-forms-demo

      - restore_cache:
          keys:
          - angular-demo-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - angular-demo-dependencies-

      - run:
          name: Deploy App to Firebase
          command: ~/ng-ngrx-forms-demo/node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

  deploy-AWS:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/ng-ngrx-forms-demo

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/ng-ngrx-forms-demo

      - run:
          name: Install AWS CLI
          command: sudo pip install awscli

      - run:
          name: Deploy to AWS S3
          command: aws s3 sync ~/ng-ngrx-forms-demo/dist s3://partha-ng-demo/ --delete --acl public-read

workflows:
  version: 2
  build-deploy-app:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
              branches:
                only: master
      - deploy-AWS:
          requires:
            - test
          filters:
              branches:
                only: master
      - deploy-firebase:
          requires:
            - test
          filters:
              branches:
                only: master
